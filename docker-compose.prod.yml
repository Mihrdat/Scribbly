version: "3.9"

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: ./docker-entrypoint.prod.sh
    ports:
      - 8000:8000
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DATABASE_URL=${DATABASE_URL}
      - SECRET_KEY=${SECRET_KEY}

      - BASE_BACKEND_URL=${BASE_BACKEND_URL}
      - RESET_PASSWORD_CONFIRM_URL=${RESET_PASSWORD_CONFIRM_URL}

      - REDIS_URL=${REDIS_URL}

      - GOOGLE_OAUTH2_CLIENT_ID=${GOOGLE_OAUTH2_CLIENT_ID}
      - GOOGLE_OAUTH2_CLIENT_SECRET=${GOOGLE_OAUTH2_CLIENT_SECRET}

      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
    volumes:
      - static-data:/app/static
      - media-data:/app/media
    depends_on:
      - db
      - redis
    restart: always

  db:
    image: postgres:16.1
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: always

  redis:
    image: redis:7.2.4
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
    restart: always

  nginx:
    build: ./nginx
    command: ./docker-entrypoint.sh
    ports:
      - 80:80
    environment:
      - LISTEN_PORT=${LISTEN_PORT}
      - UPSTREAM_HOST=${UPSTREAM_HOST}
      - UPSTREAM_PORT=${UPSTREAM_PORT}
    volumes:
      - static-data:/static
      - media-data:/media
    depends_on:
      - api
    restart: always

volumes:
  postgres-data:
  redis-data:
  static-data:
  media-data:
